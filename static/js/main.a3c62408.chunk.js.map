{"version":3,"sources":["components/Pokemon.js","components/Search.js","components/ViewAll.js","components/PokemonList.js","components/FindWildPokemon.js","components/WildPokemon.js","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","pokemon","id","src","sprites","Search","useState","search","setSearch","setPokemon","loading","setLoading","errorMessage","setErrorMessage","className","type","required","onChange","event","target","value","onClick","Axios","then","response","data","catch","error","style","color","name","front_default","ViewAll","state","this","props","Component","PokemonList","url","active","show","a","axios","get","res","setState","console","log","display","map","FindWildPokemon","Wild","wildPokemon","setWildPokemon","random","setRandom","encounterWildPokemon","min","Math","ceil","max","floor","pokeId","App","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3c62408.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Pokemon(pokemon){\r\n    return(\r\n    <div>\r\n        <p>It's ID is #{pokemon.id}</p>\r\n        <img src={pokemon.sprites} />\r\n    </div>\r\n\r\n    )\r\n    };\r\n\r\n  export default Pokemon;","import { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport Pokemon from './Pokemon';\r\n\r\nexport default function Search() {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [pokemon, setPokemon] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n    function searchPoke() {\r\n      setLoading(true);\r\n\r\n      Axios('https://pokeapi.co/api/v2/pokemon/' + search)\r\n      .then(function (response) {\r\n          setPokemon(response.data);\r\n          setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(true);\r\n        setErrorMessage(\"Not Found!\");\r\n      });\r\n    }\r\n  \r\n    return (\r\n      <div className=\"Search\">\r\n        <input type=\"text\" required onChange={(event) => {\r\n          setSearch(event.target.value);\r\n        }} />\r\n        <button onClick={() => searchPoke()}>Search</button>\r\n\r\n        {\r\n          (loading == false) ? (\r\n            <div>\r\n              <p></p>\r\n            </div>\r\n          ) : (\r\n            <div style={{color: \"red\"}} className=\"error\"> {errorMessage} </div>\r\n          ) \r\n        }\r\n        {\r\n          (loading == true) ? (\r\n            <div>\r\n              <p></p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p>\r\n              <Pokemon name={pokemon.name} id={pokemon.id} sprites={pokemon.sprites.front_default}/>\r\n              </p>\r\n            </div>\r\n          ) \r\n        }\r\n      </div>\r\n    );\r\n  }","import React, { Component } from 'react'\r\n\r\nexport default class ViewAll extends Component {\r\n    state ={\r\n        name: '',\r\n    }\r\n\r\n    render() {\r\n        const name = this.props.name;\r\n\r\n        return (\r\n            <div>\r\n                <p>{name}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ViewAll from './ViewAll';\r\n\r\nexport default class PokemonList extends Component{\r\n\r\n    state = {\r\n        url: 'https://pokeapi.co/api/v2/pokemon?limit=980',\r\n        pokemon: null,\r\n        active: false,\r\n        show: false,\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get(this.state.url);\r\n        this.setState({ pokemon: res.data['results'] })\r\n        console.log(res.data);\r\n    }\r\n\r\n    render(){\r\n        const { show } = this.state;\r\n        return(\r\n            <div>\r\n                <button className=\"view-btn\" onClick={() => this.setState({ show: !show })}>View All Pokemon</button>\r\n                    {this.state.pokemon ? (\r\n                        <div className=\"list\" style={{ display: (show ? 'block' : 'none') }}>\r\n                            {this.state.pokemon.map(pokemon => (\r\n                                <ViewAll\r\n                                    key={pokemon.name}\r\n                                    name={pokemon.name}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <p>Loading</p>\r\n                    )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function FindWildPokemon(pokemon){\r\n    return(\r\n    <div>\r\n        <h4>You encountered a {pokemon.name}!</h4>\r\n        <p>It's ID is #{pokemon.id}</p>\r\n        <img src={pokemon.sprites} />\r\n        \r\n  </div>\r\n\r\n    )\r\n    };\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport FindWildPokemon from './FindWildPokemon'\r\n\r\nexport default function Wild(){\r\n    const [wildPokemon, setWildPokemon] = useState({});\r\n    const [random, setRandom] = useState(true);\r\n\r\n    const pokeId = () => {\r\n        const min = Math.ceil(1)\r\n        const max = Math.floor(980)\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n    }\r\n\r\n    function encounterWildPokemon() {\r\n        setRandom(true);\r\n        \r\n        axios('https://pokeapi.co/api/v2/pokemon/' + pokeId())\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setWildPokemon(response.data);\r\n                setRandom(false);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"Random\">\r\n            <button className=\"randomize\" onClick={() => encounterWildPokemon()}>Randomize</button>\r\n            {\r\n          (random == true) ? (\r\n            <div>\r\n                <p></p>\r\n            </div>\r\n          ) : (\r\n              <div>\r\n                <p>\r\n                    <FindWildPokemon name={wildPokemon.name} id={wildPokemon.id} sprites={wildPokemon.sprites.front_default} />\r\n                </p>\r\n              </div>\r\n          ) \r\n        }\r\n        </div>\r\n    );\r\n    }\r\n","import React from'react';\nimport Search from './components/Search';\nimport PokemonList from './components/PokemonList';\nimport WildPokemon from './components/WildPokemon';\n\nimport './App.css';\n\nexport default class App extends React.Component {\n  render(){\n    return(\n      <div>\n        <div>\n          <img src=\"https://i.pinimg.com/originals/1d/7e/83/1d7e836aa727aa30038c1fb8bf7fc7b6.gif\"/>\n          <p><Search/></p>        \n          <p><WildPokemon/></p>\n        <hr></hr>\n        </div>\n        <div>\n          <p>Need help remembering the name of a pokemon?</p>\n          <p><PokemonList/></p>\n          </div>\n      </div>\n      \n    );\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}